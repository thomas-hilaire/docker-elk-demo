input{
  file {
    path => "/logs/*.log"
    start_position => beginning
#    codec => multiline {
#      pattern => "%{LOG_HEADER}"
#      negate => true
#      what => "previous"
#    }
  }
}

filter {
  grok {
    match => [ "message", "%{DATETIME:datetime} %{IP:src_ip} %{LOG_LEVEL} %{LOG_MESSAGE:data}$" ]
  }
  date {
    match => [ "datetime", "yyyy-MM-dd HH:mm:ss"]
    remove_field => ["datetime", "date", "time"]
  }
}

filter {
  if [level] == "WARN" {
    grok {
      match => ["data", "The client bought %{POSINT:buy_count:int} product %{WORD:product_name}$"]
      add_tag => ["isBuyLog"]
    }
  }
}

output{
  if "_grokparsefailure" in [tags] {
    stdout { codec => rubydebug } 
  }
  elasticsearch { }
}
